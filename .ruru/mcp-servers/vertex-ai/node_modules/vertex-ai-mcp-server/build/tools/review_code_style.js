import { McpError, ErrorCode } from "@modelcontextprotocol/sdk/types.js";
import { modelIdPlaceholder } from "./tool_definition.js";
export const reviewCodeStyleTool = {
    name: "review_code_style",
    description: `Reviews a code snippet against a specified style guide (e.g., Airbnb, Google) or common best practices, suggesting improvements. Uses the configured Vertex AI model (${modelIdPlaceholder}). Requires 'code' and 'language'.`,
    inputSchema: { type: "object", properties: { code: { type: "string", description: "The code snippet to review." }, language: { type: "string", description: "The programming language of the code snippet." }, styleGuide: { type: "string", enum: ["airbnb", "google", "standard"], description: "Optional style guide to check against ('airbnb', 'google', 'standard'). Defaults to general best practices." } }, required: ["code", "language"] },
    buildPrompt: (args, modelId) => {
        const { code, language, styleGuide } = args;
        if (typeof code !== "string" || !code || typeof language !== "string" || !language)
            throw new McpError(ErrorCode.InvalidParams, "Missing 'code' or 'language'.");
        const guideStr = styleGuide ? `${styleGuide}` : 'common best practices';
        return {
            systemInstructionText: `You are a code style expert. Review the ${language} code against ${guideStr} and suggest style improvements. Format as Markdown.`,
            userQueryText: `Code:\n\`\`\`${language}\n${code}\n\`\`\``,
            useWebSearch: false,
            enableFunctionCalling: false
        };
    }
};
