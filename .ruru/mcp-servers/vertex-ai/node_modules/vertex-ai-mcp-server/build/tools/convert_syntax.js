import { McpError, ErrorCode } from "@modelcontextprotocol/sdk/types.js";
import { modelIdPlaceholder } from "./tool_definition.js";
export const convertSyntaxTool = {
    name: "convert_syntax",
    description: `Converts code syntax between different versions of the same language (e.g., Python 2 to 3). Uses the configured Vertex AI model (${modelIdPlaceholder}). Requires 'code', 'sourceVersion', 'targetVersion', and 'language'.`,
    inputSchema: { type: "object", properties: { code: { type: "string", description: "The code snippet to convert." }, sourceVersion: { type: "string", description: "The original version of the language syntax." }, targetVersion: { type: "string", description: "The target version of the language syntax." }, language: { type: "string", description: "The programming language." } }, required: ["code", "sourceVersion", "targetVersion", "language"] },
    buildPrompt: (args, modelId) => {
        const { code, sourceVersion, targetVersion, language } = args;
        if (typeof code !== "string" || !code || typeof sourceVersion !== "string" || !sourceVersion || typeof targetVersion !== "string" || !targetVersion || typeof language !== "string" || !language)
            throw new McpError(ErrorCode.InvalidParams, "Missing required arguments.");
        return {
            systemInstructionText: `You are a code syntax conversion expert. Translate the ${language} code from version ${sourceVersion} to ${targetVersion}. Output *only* the translated raw code block.`,
            userQueryText: `Original Code (${language} ${sourceVersion}):\n\`\`\`${language}\n${code}\n\`\`\``,
            useWebSearch: false,
            enableFunctionCalling: false
        };
    }
};
