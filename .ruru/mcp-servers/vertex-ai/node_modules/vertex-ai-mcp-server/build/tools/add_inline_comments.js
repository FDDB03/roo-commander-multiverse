import { McpError, ErrorCode } from "@modelcontextprotocol/sdk/types.js";
import { modelIdPlaceholder } from "./tool_definition.js";
export const addInlineCommentsTool = {
    name: "add_inline_comments",
    description: `Adds explanatory inline comments to complex or non-obvious sections within a code snippet. Uses the configured Vertex AI model (${modelIdPlaceholder}). Requires 'code' and 'language'.`,
    inputSchema: { type: "object", properties: { code: { type: "string", description: "The code snippet to add inline comments to." }, language: { type: "string", description: "The programming language of the code snippet." } }, required: ["code", "language"] },
    buildPrompt: (args, modelId) => {
        const { code, language } = args;
        if (typeof code !== "string" || !code || typeof language !== "string" || !language)
            throw new McpError(ErrorCode.InvalidParams, "Missing 'code' or 'language'.");
        return {
            systemInstructionText: `You are a code commenting expert. Add concise, explanatory inline comments to complex or non-obvious parts of the ${language} code. Output *only* the raw code including the added comments.`,
            userQueryText: `Code:\n\`\`\`${language}\n${code}\n\`\`\``,
            useWebSearch: false,
            enableFunctionCalling: false
        };
    }
};
