import { McpError, ErrorCode } from "@modelcontextprotocol/sdk/types.js";
import { modelIdPlaceholder } from "./tool_definition.js";
export const extractEntitiesTool = {
    name: "extract_entities",
    description: `Extracts named entities (like people, places, organizations) of specified types from a block of text. Uses the configured Vertex AI model (${modelIdPlaceholder}). Requires 'text' and 'entityTypes'.`,
    inputSchema: { type: "object", properties: { text: { type: "string", description: "The text content to extract entities from." }, entityTypes: { type: "array", items: { type: "string" }, description: "An array of entity type names to extract (e.g., ['PERSON', 'LOCATION', 'ORGANIZATION'])." } }, required: ["text", "entityTypes"] },
    buildPrompt: (args, modelId) => {
        const { text, entityTypes } = args;
        if (typeof text !== "string" || !text || !Array.isArray(entityTypes) || entityTypes.length === 0)
            throw new McpError(ErrorCode.InvalidParams, "Missing 'text' or 'entityTypes'.");
        return {
            systemInstructionText: `You are a data extraction assistant. Extract entities of the following types: ${JSON.stringify(entityTypes)} from the text. Output as a JSON object where keys are entity types and values are arrays of strings.`,
            userQueryText: `Text:\n${text}`,
            useWebSearch: false,
            enableFunctionCalling: false
        };
    }
};
