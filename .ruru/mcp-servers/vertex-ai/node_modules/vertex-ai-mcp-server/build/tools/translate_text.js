import { McpError, ErrorCode } from "@modelcontextprotocol/sdk/types.js";
import { modelIdPlaceholder } from "./tool_definition.js";
export const translateTextTool = {
    name: "translate_text",
    description: `Translates text from a source language (optional, auto-detected if omitted) to a target language. Uses the configured Vertex AI model (${modelIdPlaceholder}). Requires 'text' and 'targetLanguage'.`,
    inputSchema: { type: "object", properties: { text: { type: "string", description: "The text content to translate." }, targetLanguage: { type: "string", description: "The language code (e.g., 'es', 'fr') or name (e.g., 'Spanish', 'French') to translate to." }, sourceLanguage: { type: "string", description: "Optional source language code or name." } }, required: ["text", "targetLanguage"] },
    buildPrompt: (args, modelId) => {
        const { text, targetLanguage, sourceLanguage } = args;
        if (typeof text !== "string" || !text || typeof targetLanguage !== "string" || !targetLanguage)
            throw new McpError(ErrorCode.InvalidParams, "Missing 'text' or 'targetLanguage'.");
        const sourceStr = sourceLanguage ? ` from ${sourceLanguage}` : '';
        return {
            systemInstructionText: `You are a translation assistant. Translate the text${sourceStr} to ${targetLanguage}. Format as Markdown.`,
            userQueryText: `Text:\n${text}`,
            useWebSearch: false,
            enableFunctionCalling: false
        };
    }
};
