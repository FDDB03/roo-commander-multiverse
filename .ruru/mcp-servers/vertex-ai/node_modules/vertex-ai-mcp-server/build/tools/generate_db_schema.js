import { McpError, ErrorCode } from "@modelcontextprotocol/sdk/types.js";
import { modelIdPlaceholder } from "./tool_definition.js";
export const generateDbSchemaTool = {
    name: "generate_db_schema",
    description: `Generates a database schema definition (SQL DDL, Prisma schema, Mongoose schema) based on a natural language description. Uses the configured Vertex AI model (${modelIdPlaceholder}). Requires 'description' and 'dbType'.`,
    inputSchema: { type: "object", properties: { description: { type: "string", description: "Natural language description of the database entities and relationships." }, dbType: { type: "string", enum: ["sql", "prisma", "mongoose"], description: "The target schema type ('sql', 'prisma', 'mongoose')." } }, required: ["description", "dbType"] },
    buildPrompt: (args, modelId) => {
        const { description, dbType } = args;
        if (typeof description !== "string" || !description || typeof dbType !== "string" || !dbType)
            throw new McpError(ErrorCode.InvalidParams, "Missing 'description' or 'dbType'.");
        return {
            systemInstructionText: `You are a database schema expert. Generate a ${dbType} schema definition based *only* on the description. Output *only* the raw schema definition code.`,
            userQueryText: `Description: ${description}`,
            useWebSearch: false,
            enableFunctionCalling: false
        };
    }
};
