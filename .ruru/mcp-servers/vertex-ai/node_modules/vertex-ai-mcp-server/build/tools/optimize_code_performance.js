import { McpError, ErrorCode } from "@modelcontextprotocol/sdk/types.js";
import { modelIdPlaceholder } from "./tool_definition.js";
export const optimizeCodePerformanceTool = {
    name: "optimize_code_performance",
    description: `Analyzes a code snippet to identify potential performance bottlenecks and suggests specific optimizations with explanations. Uses the configured Vertex AI model (${modelIdPlaceholder}). Requires 'code' and 'language'.`,
    inputSchema: { type: "object", properties: { code: { type: "string", description: "The code snippet to analyze for performance." }, language: { type: "string", description: "The programming language of the code snippet." } }, required: ["code", "language"] },
    buildPrompt: (args, modelId) => {
        const { code, language } = args;
        if (typeof code !== "string" || !code || typeof language !== "string" || !language)
            throw new McpError(ErrorCode.InvalidParams, "Missing 'code' or 'language'.");
        return {
            systemInstructionText: `You are a code optimization expert. Identify performance bottlenecks in the ${language} code and suggest specific optimizations. Explain reasoning. Format as Markdown. Validate suggestions carefully.`,
            userQueryText: `Code:\n\`\`\`${language}\n${code}\n\`\`\``,
            useWebSearch: false,
            enableFunctionCalling: false
        };
    }
};
