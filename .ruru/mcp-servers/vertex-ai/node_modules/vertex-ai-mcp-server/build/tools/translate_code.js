import { McpError, ErrorCode } from "@modelcontextprotocol/sdk/types.js";
import { modelIdPlaceholder } from "./tool_definition.js";
export const translateCodeTool = {
    name: "translate_code",
    description: `Translates a code snippet from a source language to a target language, aiming to preserve functionality and idiomatic style. Uses the configured Vertex AI model (${modelIdPlaceholder}). Requires 'code', 'sourceLanguage', and 'targetLanguage'.`,
    inputSchema: { type: "object", properties: { code: { type: "string", description: "The code snippet to translate." }, sourceLanguage: { type: "string", description: "The original programming language of the code." }, targetLanguage: { type: "string", description: "The desired programming language for the translation." } }, required: ["code", "sourceLanguage", "targetLanguage"] },
    buildPrompt: (args, modelId) => {
        const { code, sourceLanguage, targetLanguage } = args;
        if (typeof code !== "string" || !code || typeof sourceLanguage !== "string" || !sourceLanguage || typeof targetLanguage !== "string" || !targetLanguage)
            throw new McpError(ErrorCode.InvalidParams, "Missing required arguments.");
        return {
            systemInstructionText: `You are an expert code translation assistant. Translate the code from ${sourceLanguage} to ${targetLanguage}, maintaining functionality and idioms. Output *only* the translated raw code block.`,
            userQueryText: `Original Code (${sourceLanguage}):\n\`\`\`${sourceLanguage}\n${code}\n\`\`\``,
            useWebSearch: false,
            enableFunctionCalling: false
        };
    }
};
